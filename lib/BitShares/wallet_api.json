{
  "category": "Wallet Methods",
  "methods" :
    [
      {
        "method_name": "wallet_get_info",
        "description": "Extra information about the wallet.",
        "return_type": "json_object",
        "parameters" :
          [
          ],
        "prerequisites" : ["json_authenticated"]
      },
      {
        "method_name": "wallet_open",
        "description": "Opens the wallet of the given name",
        "return_type": "void",
        "parameters" :
          [
            {
              "name" : "wallet_name",
              "type" : "wallet_name",
              "description" : "the name of the wallet to open"
            }
          ],
        "prerequisites" : ["json_authenticated"],
        "aliases" : ["open"]
      },
      {
        "method_name": "wallet_create",
        "description": "Creates a wallet with the given name",
        "return_type": "void",
        "parameters" :
          [
            {
              "name" : "wallet_name",
              "type" : "wallet_name",
              "description" : "name of the wallet to create"
            },
            {
              "name" : "new_passphrase",
              "type" : "new_passphrase",
              "description" : "a passphrase for encrypting the wallet"
            },
            {
              "name" : "brain_key",
              "type" : "brainkey",
              "description" : "a strong passphrase that will be used to generate all private keys, defaults to a large random number",
              "default_value" : ""
            }
          ],
        "prerequisites" : ["json_authenticated"],
        "aliases" : ["create"]
      },
      {
        "method_name": "wallet_get_name",
        "description": "Returns the wallet name passed to wallet_open",
        "return_type": "optional_wallet_name",
        "parameters" : [],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "wallet_import_private_key",
        "description": "Loads the private key into the specified account. Returns which account it was actually imported to.",
        "return_type": "account_name",
        "parameters" : [
           {
              "name" : "wif_key",
              "type" : "wif_private_key",
              "description" : "A private key in bitcoin Wallet Import Format (WIF)"
           },
           {
              "name" : "account_name",
              "type" : "account_name",
              "description" : "the name of the account the key should be imported into, if null then the key must belong to an active account",
              "default_value" : null
           },
           {
              "name" : "create_new_account",
              "type" : "bool",
              "description" : "If true, the wallet will attempt to create a new account for the name provided rather than import the key into an existing account",
              "default_value" : false
           },
           {
              "name" : "rescan",
              "type" : "bool",
              "description" : "If true, the wallet will rescan the blockchain looking for transactions that involve this private key",
              "default_value" : false
           }
        ],
        "prerequisites" : ["wallet_unlocked"],
        "aliases" : ["import_key", "importprivkey"]
      },
      {
        "method_name": "wallet_import_bitcoin",
        "description": "Imports a Bitcoin Core or BitShares PTS wallet",
        "return_type": "uint32_t",
        "parameters" : [
           {
              "name" : "wallet_filename",
              "type" : "filename",
              "description" : "the Bitcoin/PTS wallet file path"
           },
           {
              "name" : "passphrase",
              "type" : "passphrase",
              "description" : "the imported wallet's password"
           },
           {
              "name" : "account_name",
              "type" : "account_name",
              "description" : "the account to receive the contents of the wallet"
           }
        ],
        "prerequisites" : ["wallet_unlocked"]
      },
      {
        "method_name": "wallet_import_electrum",
        "description": "Imports an Electrum wallet",
        "return_type": "uint32_t",
        "parameters" : [
           {
              "name" : "wallet_filename",
              "type" : "filename",
              "description" : "the Electrum wallet file path"
           },
           {
              "name" : "passphrase",
              "type" : "passphrase",
              "description" : "the imported wallet's password"
           },
           {
              "name" : "account_name",
              "type" : "account_name",
              "description" : "the account to receive the contents of the wallet"
           }
        ],
        "prerequisites" : ["wallet_unlocked"]
      },
      {
          "method_name": "wallet_import_keyhotee",
          "description": "Create the key from keyhotee config and import it to the wallet, creating a new account using this key",
          "return_type": "void",
          "parameters" : [
          {
              "name" : "firstname",
              "type" : "name",
              "description" : "first name in keyhotee profile config, for salting the seed of private key"
          },
          {
              "name" : "middlename",
              "type" : "name",
              "description" : "middle name in keyhotee profile config, for salting the seed of private key"
          },
          {
              "name" : "lastname",
              "type" : "name",
              "description" : "last name in keyhotee profile config, for salting the seed of private key"
          },
          {
              "name" : "brainkey",
              "type" : "brainkey",
              "description" : "brainkey in keyhotee profile config, for salting the seed of private key"
          },
          {
              "name" : "keyhoteeid",
              "type" : "keyhoteeid",
              "description" : "using keyhotee id as account name"
          }
          ],
          "prerequisites" : ["wallet_unlocked"]
      },
      {
        "method_name": "wallet_close",
        "description": "Closes the curent wallet if one is open",
        "return_type": "void",
        "parameters" : [],
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["close"]
      },
      {
        "method_name": "wallet_backup_create",
        "description": "Exports the current wallet to a JSON file",
        "return_type": "void",
        "parameters" :
          [
            {
              "name" : "json_filename",
              "type" : "filename",
              "description" : "the full path and filename of JSON file to generate",
              "example" : "/path/to/exported_wallet.json"
            }
          ],
        "is_const" : true,
        "prerequisites" : ["wallet_open"],
        "aliases" : ["backupwallet", "wallet_export_to_json"]
      },
      {
        "method_name": "wallet_backup_restore",
        "description": "Creates a new wallet from an exported JSON file",
        "return_type": "void",
        "parameters" :
          [
            {
              "name" : "json_filename",
              "type" : "filename",
              "description" : "the full path and filename of JSON wallet to import",
              "example" : "/path/to/exported_wallet.json"
            },
            {
              "name" : "wallet_name",
              "type" : "wallet_name",
              "description" : "name of the wallet to create"
            },
            {
              "name" : "imported_wallet_passphrase",
              "type" : "passphrase",
              "description" : "passphrase of the imported wallet"
            }
          ],
        "prerequisites" : ["json_authenticated"],
        "aliases" : ["wallet_create_from_json"]
      },
      {
        "method_name": "wallet_set_automatic_backups",
        "description": "Enables or disables automatic wallet backups",
        "return_type": "bool",
        "parameters" :
          [
            {
              "name" : "enabled",
              "type" : "bool",
              "description" : "true to enable and false to disable"
            }
          ],
        "prerequisites" : ["wallet_open"],
        "aliases" : ["auto_backup", "autobackup"]
      },
      {
        "method_name": "wallet_set_transaction_expiration_time",
        "description": "Set transaction expiration time",
        "return_type": "uint32_t",
        "parameters" :
          [
            {
              "name" : "seconds",
              "type" : "uint32_t",
              "description" : "seconds before new transactions expire"
            }
          ],
        "prerequisites" : ["wallet_open"],
        "aliases" : ["set_expiration"]
      },
      {
        "method_name": "wallet_account_transaction_history",
        "description": "Lists transaction history for the specified account",
        "return_type": "pretty_transactions",
        "parameters" :
          [
            {
              "name" : "account_name",
              "type" : "string",
              "description" : "the name of the account for which the transaction history will be returned, \"\" for all accounts",
              "example" : "alice",
              "default_value" : ""
            },
            {
               "name" : "asset_symbol",
               "type" : "string",
               "description" : "only include transactions involving the specified asset, or \"\" to include all",
               "default_value" : ""
            },
            {
               "name" : "limit",
               "type" : "int32_t",
               "description" : "limit the number of returned transactions; negative for most recent and positive for least recent. 0 does not limit",
               "default_value" : 0
            },
            {
               "name" : "start_block_num",
               "type" : "uint32_t",
               "description" : "the earliest block number to list transactions from; 0 to include all transactions starting from genesis",
               "default_value" : 0
            },
            {
               "name" : "end_block_num",
               "type" : "uint32_t",
               "description" : "the latest block to list transaction from; -1 to include all transactions ending at the head block",
               "default_value" : -1
            }
        ],
        "prerequisites" : ["wallet_open"],
        "is_const": true,
        "aliases" : ["history", "listtransactions"]
      },
      {
        "method_name": "wallet_transaction_history_experimental",
        "description": "",
        "return_type": "experimental_transactions",
        "parameters" :
          [
            {
              "name" : "account_name",
              "type" : "string",
              "description" : "the name of the account for which the transaction history will be returned, \"\" for all accounts",
              "example" : "alice",
              "default_value" : ""
            }
        ],
        "prerequisites" : ["wallet_unlocked"],
        "is_const": true,
        "aliases" : ["hx"]
      },
      {
        "method_name": "wallet_remove_transaction",
        "description": "Removes the specified transaction record from your transaction history. USE WITH CAUTION! Rescan cannot reconstruct all transaction details",
        "return_type": "void",
        "parameters" :
          [
            {
              "name" : "transaction_id",
              "type" : "string",
              "description" : "the id (or id prefix) of the transaction record"
            }
          ],
        "prerequisites" : ["wallet_unlocked"],
        "aliases" : ["remove_transaction", "wallet_transaction_remove"]
      },
      {
        "method_name": "wallet_get_pending_transaction_errors",
        "description": "Return any errors for your currently pending transactions",
        "return_type": "map<transaction_id_type, fc::exception>",
        "parameters" :
        [
            {
              "name" : "filename",
              "type" : "string",
              "description" : "filename to save pending transaction errors to",
              "default_value" : ""
            }
        ],
        "prerequisites" : ["wallet_open"],
        "is_const": true,
        "aliases" : []
      },
      {
        "method_name": "wallet_lock",
        "description": "Lock the private keys in wallet, disables spending commands until unlocked",
        "return_type": "void",
        "parameters" : [],
        "prerequisites" : ["wallet_open"],
        "aliases" : ["lock"]
      },
      {
        "method_name": "wallet_unlock",
        "description": "Unlock the private keys in the wallet to enable spending operations",
        "return_type": "void",
        "parameters" :
          [
            {
              "name" : "timeout",
              "type" : "uint32_t",
              "description" : "the number of seconds to keep the wallet unlocked"
            },
            {
              "name" : "passphrase",
              "type" : "passphrase",
              "description" : "the passphrase for encrypting the wallet"
            }
          ],
        "prerequisites" : ["wallet_open"],
        "aliases" : ["unlock", "walletpassphrase"]
      },
      {
        "method_name": "wallet_change_passphrase",
        "description": "Change the password of the current wallet",
        "return_type": "void",
        "parameters" :
          [
            {
              "name" : "passphrase",
              "type" : "passphrase",
              "description" : "the passphrase for encrypting the wallet"
            }
          ],
        "prerequisites" : ["wallet_unlocked"],
        "aliases" : ["walletpassphrasechange"],
        "detailed_description" : "This will change the wallet's spending passphrase, please make sure you remember it."
      },
      {
        "method_name": "wallet_list",
        "description": "Return a list of wallets in the current data directory",
        "return_type": "wallet_name_array",
        "parameters" : [],
        "prerequisites" : ["json_authenticated"],
        "is_const": true,
        "aliases" : []
      },
      {
        "method_name": "wallet_account_create",
        "description": "Add new account for receiving payments",
        "return_type": "public_key",
        "parameters" :
          [
            {
              "name" : "account_name",
              "type" : "account_name",
              "description" : "the name you will use to refer to this receive account",
              "enable_autocomplete" : false
            },
            {
              "name" : "private_data",
              "type" : "json_variant",
              "description" : "Extra data to store with this account record",
              "default_value" : null
            }
          ],
        "prerequisites" : ["wallet_unlocked"],
        "aliases" : [ "wallet_create_account", "create_account" ]
      },
      {
        "method_name": "wallet_account_set_favorite",
        "description": "Updates the favorited status of the specified account",
        "return_type": "void",
        "parameters" :
          [
            {
              "name" : "account_name",
              "type" : "account_name",
              "description" : "the name of the account to set favorited status on"
            },
            {
              "name" : "is_favorite",
              "type" : "bool",
              "description" : "true if account should be marked as a favorite; false otherwise",
              "default_value" : true
            }
          ],
        "prerequisites" : ["wallet_open"],
        "aliases" : [ "favor" ]
      },
      {
        "method_name": "wallet_account_set_approval",
        "description": "Updates your approval of the specified account",
        "return_type": "int8_t",
        "parameters" :
          [
            {
              "name" : "account_name",
              "type" : "account_name",
              "description" : "the name of the account to set approval for"
            },
            {
              "name" : "approval",
              "type" : "int8_t",
              "description" : "1, 0, or -1 respectively for approve, neutral, or disapprove",
              "default_value" : 1
            }
          ],
        "prerequisites" : ["wallet_open"],
        "aliases" : [ "approve", "set_approval", "wallet_approve_delegate", "wallet_approve" ]
      },
      {
        "method_name": "wallet_add_contact_account",
        "description": "Add new account for sending payments",
        "return_type": "void",
        "parameters" :
          [
            {
              "name" : "account_name",
              "type" : "account_name",
              "description" : "the name you will use to refer to this sending account",
              "enable_autocomplete" : false
            },
            {
              "name" : "account_key",
              "type" : "public_key",
              "description" : "the key associated with this sending account"
            }
          ],
        "prerequisites" : ["wallet_open"]
      },
      {
        "method_name": "wallet_burn",
        "description": "Burns given amount to the given account.  This will allow you to post message and +/- sentiment on someones account as a form of reputation.",
        "return_type": "transaction_record",
        "parameters" :
          [
            {
              "name" : "amount_to_transfer",
              "type" : "real_amount",
              "description" : "the amount of shares to transfer"
            },
            {
              "name" : "asset_symbol",
              "type" : "asset_symbol",
              "description" : "the asset to transfer"
            },
            {
              "name" : "from_account_name",
              "type" : "sending_account_name",
              "description" : "the source account to draw the shares from"
            },
            {
              "name" : "for_or_against",
              "type" : "string",
              "description" : "the value 'for' or 'against'"
            },
            {
              "name" : "to_account_name",
              "type" : "receive_account_name",
              "description" : "the account to which the burn should be credited (for or against) and on which the public message will appear"
            },
            {
              "name" : "public_message",
              "type" : "string",
              "description" : "a public message to post",
              "default_value" : ""
            },
            {
              "name" : "anonymous",
              "type" : "bool",
              "description" : "true if anonymous, else signed by from_account_name",
              "default_value" : "false"
            }
          ],
        "prerequisites" : ["wallet_unlocked"],
        "aliases" : ["burn"]
      },
      {
        "method_name": "wallet_transfer",
        "description": "Sends given amount to the given account, with the from field set to the payer.  This transfer will occur in a single transaction and will be cheaper, but may reduce your privacy.",
        "return_type": "transaction_record",
        "parameters" :
          [
            {
              "name" : "amount_to_transfer",
              "type" : "string",
              "description" : "the amount of shares to transfer"
            },
            {
              "name" : "asset_symbol",
              "type" : "asset_symbol",
              "description" : "the asset to transfer"
            },
            {
              "name" : "from_account_name",
              "type" : "sending_account_name",
              "description" : "the source account to draw the shares from"
            },
            {
              "name" : "to_account_name",
              "type" : "receive_account_name",
              "description" : "the account to transfer the shares to"
            },
            {
              "name" : "memo_message",
              "type" : "string",
              "description" : "a memo to store with the transaction",
              "default_value" : ""
            },
            {
              "name" : "vote_method",
              "type" : "vote_selection_method",
              "description" : "enumeration [vote_none | vote_all | vote_random | vote_recommended] ",
              "default_value" : "vote_recommended"
            }
          ],
        "prerequisites" : ["wallet_unlocked"],
        "aliases" : ["transfer"]
      },
      {
        "method_name": "wallet_transfer_from",
        "description": "Sends given amount to the given name, with the from field set to a different account than the payer.  This transfer will occur in a single transaction and will be cheaper, but may reduce your privacy.",
        "return_type": "transaction_record",
        "parameters" :
          [
            {
              "name" : "amount_to_transfer",
              "type" : "string",
              "description" : "the amount of shares to transfer"
            },
            {
              "name" : "asset_symbol",
              "type" : "asset_symbol",
              "description" : "the asset to transfer"
            },
            {
              "name" : "paying_account_name",
              "type" : "sending_account_name",
              "description" : "the source account to draw the shares from"
            },
            {
              "name" : "from_account_name",
              "type" : "sending_account_name",
              "description" : "the account to show the recipient as being the sender (requires account's private key to be in wallet)."
            },
            {
              "name" : "to_account_name",
              "type" : "receive_account_name",
              "description" : "the account to transfer the shares to"
            },
            {
              "name" : "memo_message",
              "type" : "string",
              "description" : "a memo to store with the transaction",
              "default_value" : ""
            },
            {
              "name" : "vote_method",
              "type" : "vote_selection_method",
              "description" : "enumeration [vote_none | vote_all | vote_random | vote_recommended] ",
              "default_value" : "vote_recommended"
            }
          ],
        "prerequisites" : ["wallet_unlocked"]
      },
      {
        "method_name": "wallet_rescan_blockchain",
        "description": "Scans the blockchain history for operations relevant to this wallet.",
        "return_type": "void",
        "parameters" :
          [
            {
              "name" : "first_block_number",
              "type" : "uint32_t",
              "description" : "the first block to scan",
              "default_value" : 0
            },
            {
              "name" : "num_blocks",
              "type" : "uint32_t",
              "description" : "the number of blocks to scan",
              "default_value" : -1
            },
            {
              "name" : "fast_scan",
              "type" : "bool",
              "description" : "true to scan as fast as possible but freeze the rest of your computer, and false otherwise",
              "default_value" : false
            }
          ],
        "prerequisites" : ["wallet_unlocked"],
        "aliases" : ["scan", "rescan"]
      },
      {
        "method_name": "wallet_get_transaction",
        "description": "Queries your wallet for the specified transaction",
        "return_type": "transaction_record",
        "parameters" :
          [
            {
              "name" : "transaction_id",
              "type" : "string",
              "description" : "the id (or id prefix) of the transaction"
            }
          ],
        "prerequisites" : ["wallet_open"],
        "aliases" : ["get_transaction"]
      },
      {
        "method_name": "wallet_scan_transaction",
        "description": "Scans the specified transaction",
        "return_type": "transaction_record",
        "parameters" :
          [
            {
              "name" : "transaction_id",
              "type" : "string",
              "description" : "the id (or id prefix) of the transaction"
            },
            {
              "name" : "overwrite_existing",
              "type" : "bool",
              "description" : "true to overwrite existing wallet transaction record and false otherwise",
              "default_value": false
            }
          ],
        "prerequisites" : ["wallet_unlocked"],
        "aliases" : ["scan_transaction", "wallet_transaction_scan"]
      },
      {
        "method_name": "wallet_scan_transaction_experimental",
        "description": "Scans the specified transaction",
        "return_type": "void",
        "parameters" :
          [
            {
              "name" : "transaction_id",
              "type" : "string",
              "description" : "the id (or id prefix) of the transaction"
            },
            {
              "name" : "overwrite_existing",
              "type" : "bool",
              "description" : "true to overwrite existing wallet transaction record and false otherwise",
              "default_value": false
            }
          ],
        "prerequisites" : ["wallet_unlocked"],
        "aliases" : ["sx"]
      },
      {
        "method_name": "wallet_add_transaction_note_experimental",
        "description": "Adds a custom note to the specified transaction",
        "return_type": "void",
        "parameters" :
          [
            {
              "name" : "transaction_id",
              "type" : "string",
              "description" : "the id (or id prefix) of the transaction"
            },
            {
              "name" : "note",
              "type" : "string",
              "description" : "note to add"
            }
          ],
        "prerequisites" : ["wallet_unlocked"],
        "aliases" : ["nx"]
      },
      {
        "method_name": "wallet_rebroadcast_transaction",
        "description": "Rebroadcasts the specified transaction",
        "return_type": "void",
        "parameters" :
          [
            {
              "name" : "transaction_id",
              "type" : "string",
              "description" : "the id (or id prefix) of the transaction"
            }
          ],
        "prerequisites" : ["wallet_open"],
        "aliases" : ["rebroadcast", "wallet_transaction_rebroadcast"]
      },
      {
         "method_name" : "wallet_account_register",
         "description" : "Updates the data published about a given account",
         "return_type" : "transaction_record",
         "parameters"  : [
               {
                  "name" : "account_name",
                  "type" : "account_name",
                  "description" : "the account that will be updated"
               },
               {
                  "name" : "pay_from_account",
                  "type" : "account_name",
                  "description" : "the account from which fees will be paid"
               },
               {
                  "name" : "public_data",
                  "type" : "json_variant",
                  "description" : "public data about the account",
                  "default_value" : null
               },
               {
                  "name" : "delegate_pay_rate",
                  "type" : "share_type",
                  "description" : "Negative for non-delegates; otherwise the number of shares to be issued per produced block",
                  "default_value" : -1
               },
               {
                  "name" : "account_type",
                  "type" : "string",
                  "description" : "titan_account | public_account - public accounts do not receive memos and all payments are made to the active key",
                  "default_value" : "titan_account"
               }
            ],
         "prerequisites" : ["wallet_unlocked"],
         "aliases" : [ "register" ]
      },
      {
         "method_name" : "wallet_account_update_private_data",
         "description" : "Updates the local private data for an account",
         "return_type" : "void",
         "parameters"  : [
               {
                  "name" : "account_name",
                  "type" : "account_name",
                  "description" : "the account that will be updated"
               },
               {
                  "name" : "private_data",
                  "type" : "json_variant",
                  "description" : "private data about the account",
                  "default_value" : null
               }
            ],
         "prerequisites" : ["wallet_unlocked"],
         "aliases" : [ "update_private_data" ]
      },
      {
         "method_name" : "wallet_account_update_registration",
         "description" : "Updates the data published about a given account",
         "return_type" : "transaction_record",
         "parameters"  : [
               {
                  "name" : "account_name",
                  "type" : "account_name",
                  "description" : "the account that will be updated"
               },
               {
                  "name" : "pay_from_account",
                  "type" : "account_name",
                  "description" : "the account from which fees will be paid"
               },
               {
                  "name" : "public_data",
                  "type" : "json_variant",
                  "description" : "public data about the account",
                  "default_value" : null
               },
               {
                  "name" : "delegate_pay_rate",
                  "type" : "share_type",
                  "description" : "Negative for non-delegates; otherwise the number of shares to be issued per produced block",
                  "default_value" : -1
               }
            ],
         "prerequisites" : ["wallet_unlocked"],
         "aliases" : [ "update_registration" ]
      },
      {
         "method_name" : "wallet_account_update_active_key",
         "description" : "Updates the specified account's active key and broadcasts the transaction.",
         "return_type" : "transaction_record",
         "parameters"  : [
            {
                "name" : "account_to_update",
                "type" : "account_name",
                "description" : "The name of the account to update the active key of."
            },
            {
                "name" : "pay_from_account",
                "type" : "account_name",
                "description" : "The account from which fees will be paid."
            },
            {
                "name" : "new_active_key",
                "type" : "string",
                "description" : "WIF private key to update active key to. If empty, a new key will be generated.",
                "default_value" : ""
            }
         ],
         "prerequisites" : ["wallet_unlocked"]
      },
      {
         "method_name" : "wallet_list_accounts",
         "description" : "Lists all accounts associated with this wallet",
         "return_type" : "wallet_account_record_array",
         "parameters"  : [],
         "is_const" : true,
         "prerequisites" : ["wallet_open"],
         "aliases" : [ "listaccounts" ]
      },
      {
         "method_name" : "wallet_list_favorite_accounts",
         "description" : "Lists all accounts which have been marked as favorites.",
         "return_type" : "wallet_account_record_array",
         "parameters"  : [],
         "is_const" : true,
         "prerequisites" : ["wallet_open"]
      },
      {
         "method_name" : "wallet_list_unregistered_accounts",
         "description" : "Lists all unregistered accounts belonging to this wallet",
         "return_type" : "wallet_account_record_array",
         "parameters"  : [],
         "is_const" : true,
         "prerequisites" : ["wallet_open"]
      },
      {
         "method_name" : "wallet_list_my_accounts",
         "description" : "Lists all accounts for which we have a private key in this wallet",
         "return_type" : "wallet_account_record_array",
         "parameters"  : [],
         "is_const" : true,
         "prerequisites" : ["wallet_open"]
      },
      {
         "method_name" : "wallet_get_account",
         "description" : "Get the account record for a given name",
         "return_type" : "wallet_account_record",
         "parameters"  : [
               {
                  "name" : "account_name",
                  "type" : "account_name",
                  "description" : "the name of the account to retrieve"
               }
            ],
         "is_const" : true,
         "prerequisites" : ["wallet_open"]
      },
      {
         "method_name" : "wallet_remove_contact_account",
         "description" : "Remove a contact account from your wallet",
         "return_type" : "void",
         "parameters"  : [
               {
                  "name" : "account_name",
                  "type" : "account_name",
                  "description" : "the name of the contact"
               }
            ],
         "prerequisites" : ["wallet_open"]
      },
      {
         "method_name" : "wallet_account_rename",
         "description" : "Rename an account in wallet",
         "return_type" : "void",
         "parameters"  : [
               {
                  "name" : "current_account_name",
                  "type" : "account_name",
                  "description" : "the current name of the account"
               },
               {
                  "name" : "new_account_name",
                  "type" : "new_account_name",
                  "description" : "the new name for the account"
               }
            ],
         "prerequisites" : ["wallet_open"],
         "aliases" : ["wallet_rename_account"]
      },
      {
         "method_name" : "wallet_asset_create",
         "description" : "Creates a new user issued asset",
         "return_type" : "transaction_record",
         "parameters"  : [
               {
                  "name" : "symbol",
                  "type" : "asset_symbol",
                  "description" : "the ticker symbol for the new asset"
               },
               {
                  "name" : "asset_name",
                  "type" : "string",
                  "description" : "the name of the asset"
               },
               {
                  "name" : "issuer_name",
                  "type" : "string",
                  "description" : "the name of the issuer of the asset"
               },
               {
                  "name" : "description",
                  "type" : "string",
                  "description" : "a description of the asset",
                  "default_value" : ""
               },
               {
                  "name" : "data",
                  "type" : "json_variant",
                  "description" : "arbitrary data attached to the asset",
                  "default_value" : null
               },
               {
                  "name" : "maximum_share_supply",
                  "type" : "real_amount",
                  "description" : "the maximum number of shares of the asset",
                  "default_value" : 1000000000000000
               },
               {
                  "name" : "precision",
                  "type" : "int64_t",
                  "description" : "defines where the decimal should be displayed, must be a power of 10",
                  "default_value" : 1000000
               },
               {
                  "name" : "is_market_issued",
                  "type" : "bool",
                  "description" : "creation of a new BitAsset that is created by shorting",
                  "default_value": false
               }
            ],
         "prerequisites" : ["wallet_unlocked"]
      },
      {
         "method_name" : "wallet_asset_issue",
         "description" : "Issues new shares of a given asset type",
         "return_type" : "transaction_record",
         "parameters"  : [
               {
                  "name" : "amount",
                  "type" : "real_amount",
                  "description" : "the amount of shares to issue"
               },
               {
                  "name" : "symbol",
                  "type" : "asset_symbol",
                  "description" : "the ticker symbol for asset"
               },
               {
                  "name" : "to_account_name",
                  "type" : "account_name",
                  "description" : "the name of the account to receive the shares"
               },
               {
                  "name" : "memo_message",
                  "type" : "string",
                  "description" : "the memo to send to the receiver",
                  "default_value": ""
               }
            ],
         "detailed_description" : "The asset being issued must have been created via wallet_asset_create in a previous block.",
         "prerequisites" : ["wallet_unlocked"]
      },
      {
         "method_name"    : "wallet_account_balance",
         "description"    : "Lists the total asset balances for the specified account",
         "return_type"    : "account_balance_summary_type",
         "parameters"     : [
         {
            "name" : "account_name",
            "type" : "account_name",
            "description" : "the account to get a balance for, or leave empty for all accounts",
            "default_value" : ""
         }
         ],
         "is_const" : true,
         "prerequisites" : ["wallet_open"],
         "aliases" : ["balance", "getbalance"]
      },
      {
         "method_name"    : "wallet_account_balance_ids",
         "description"    : "Lists the balance record ids for the specified account",
         "return_type"    : "account_balance_id_summary_type",
         "parameters"     : [
         {
            "name" : "account_name",
            "type" : "account_name",
            "description" : "the account to list balance ids for, or leave empty for all accounts",
            "default_value" : ""
         }
         ],
         "is_const" : true,
         "prerequisites" : ["wallet_open"],
         "aliases" : []
      },
      {
         "method_name"    : "wallet_account_yield",
         "description"    : "Lists the total accumulated yield for asset balances",
         "return_type"    : "account_balance_summary_type",
         "parameters"     : [
         {
            "name" : "account_name",
            "type" : "account_name",
            "description" : "the account to get yield for, or leave empty for all accounts",
            "default_value" : ""
         }
         ],
         "is_const" : true,
         "prerequisites" : ["wallet_open"],
         "aliases" : ["yield", "getyield"]
      },
      {
         "method_name" : "wallet_account_list_public_keys",
         "description" : "Lists all public keys in this account",
         "return_type" : "public_key_summary_array",
         "parameters"  : [
           {
                "name" : "account_name",
                "type" : "account_name",
                "description" : "the account for which public keys should be listed"
           }
         ],
         "prerequisites" : ["wallet_open"],
         "aliases": ["public_keys"]
      },
      {
         "method_name"  : "wallet_delegate_withdraw_pay",
         "description"  : "Used to transfer some of the delegate's pay from their balance",
         "return_type"  : "transaction_record",
         "parameters"   : [
            {
              "name" : "delegate_name",
              "type" : "account_name",
              "description" : "the delegate whose pay is being cashed out"
            },
            {
              "name" : "to_account_name",
              "type" : "account_name",
              "description" : "the account that should receive the funds"
            },
            {
               "name" : "amount_to_withdraw",
               "type" : "real_amount",
               "description" : "the amount to withdraw"
            }
         ],
         "prerequisites" : ["wallet_unlocked"],
         "aliases" : ["pay_delegate"]
      },
      {
         "method_name"  : "wallet_set_transaction_fee",
         "description"  : "Set the fee to add to new transactions",
         "return_type"  : "asset",
         "parameters"   : [
         {
            "name" : "fee",
            "type" : "real_amount",
            "description" : "the wallet transaction fee to set"
         }
         ],
         "prerequisites" : ["wallet_open"],
         "aliases" : ["wallet_set_priority_fee", "set_priority_fee", "settrxfee", "setfee", "set_fee"]
      },
      {
         "method_name"  : "wallet_get_transaction_fee",
         "description"  : "Returns ",
         "return_type"  : "asset",
         "parameters"   : [
         {
            "name" : "symbol",
            "type" : "asset_symbol",
            "description" : "the wallet transaction if paid in the given asset type",
            "default_value" : ""
         }
         ],
         "prerequisites" : ["wallet_open"],
         "aliases" : ["wallet_get_priority_fee", "get_priority_fee", "gettrxfee", "getfee", "get_fee"]
      },
      {
         "method_name" : "wallet_market_submit_bid",
         "description" : "Used to place a request to buy a quantity of assets at a price specified in another asset",
         "return_type" : "transaction_record",
         "parameters"  : [
            {
               "name" : "from_account_name",
               "type" : "account_name",
               "description" : "the account that will provide funds for the bid"
            },
            {
               "name" : "quantity",
               "type" : "string",
               "description" : "the quantity of items you would like to buy"
            },
            {
               "name" : "quantity_symbol",
               "type" : "asset_symbol",
               "description" : "the type of items you would like to buy"
            },
            {
               "name" : "base_price",
               "type" : "string",
               "description" : "the price you would like to pay"
            },
            {
               "name" : "base_symbol",
               "type" : "asset_symbol",
               "description" : "the type of asset you would like to pay with"
            },
            {
               "name" : "allow_stupid_bid",
               "type" : "bool",
               "description" : "Allow user to place bid at more than 5% above the current sell price.",
               "default_value" : "false"
            }
         ],
         "prerequisites" : ["wallet_unlocked"],
         "aliases" : [ "bid" ]
      },
      {
         "method_name" : "wallet_market_submit_ask",
         "description" : "Used to place a request to sell a quantity of assets at a price specified in another asset",
         "return_type" : "transaction_record",
         "parameters"  : [
            {
               "name" : "from_account_name",
               "type" : "account_name",
               "description" : "the account that will provide funds for the ask"
            },
            {
               "name" : "sell_quantity",
               "type" : "string",
               "description" : "the quantity of items you would like to sell"
            },
            {
               "name" : "sell_quantity_symbol",
               "type" : "asset_symbol",
               "description" : "the type of items you would like to sell"
            },
            {
               "name" : "ask_price",
               "type" : "string",
               "description" : "the price per unit sold."
            },
            {
               "name" : "ask_price_symbol",
               "type" : "asset_symbol",
               "description" : "the type of asset you would like to be paid"
            },
            {
               "name" : "allow_stupid_ask",
               "type" : "bool",
               "description" : "Allow user to place ask at more than 5% below the current buy price.",
               "default_value" : "false"
            }
         ],
         "prerequisites" : ["wallet_unlocked"],
         "aliases" : [ "ask" ]
      },
      {
         "method_name" : "wallet_market_submit_short",
         "description" : "Used to place a request to short sell a quantity of assets at a price specified",
         "return_type" : "transaction_record",
         "parameters"  : [
            {
               "name" : "from_account_name",
               "type" : "account_name",
               "description" : "the account that will provide funds for the ask"
            },
            {
               "name" : "short_collateral",
               "type" : "string",
               "description" : "the amount of collateral you wish to fund this short with"
            },
            {
               "name" : "collateral_symbol",
               "type" : "asset_symbol",
               "description" : "the type of asset collateralizing this short (i.e. XTS)"
            },
            {
               "name" : "interest_rate",
               "type" : "string",
               "description" : "the APR you wish to pay interest at (0.0% to 1000.0%)"
            },
            {
               "name" : "quote_symbol",
               "type" : "asset_symbol",
               "description" : "the asset to short sell (i.e. USD)"
            },
            {
               "name" : "short_price_limit",
               "type" : "string",
               "description" : "maximim price (USD per XTS) that the short will execute at, if 0 then no limit will be applied",
               "default_value" : 0
            }
         ],
         "prerequisites" : ["wallet_unlocked"],
         "aliases" : [ "short" ]
      },
      {
         "method_name" : "wallet_market_cover",
         "description" : "Used to place a request to cover an existing short position",
         "return_type" : "transaction_record",
         "parameters"  : [
            {
               "name" : "from_account_name",
               "type" : "account_name",
               "description" : "the account that will provide funds for the ask"
            },
            {
               "name" : "quantity",
               "type" : "string",
               "description" : "the quantity of asset you would like to cover"
            },
            {
               "name" : "quantity_symbol",
               "type" : "asset_symbol",
               "description" : "the type of asset you are covering (ie: USD)"
            },
            {
               "name" : "cover_id",
               "type" : "order_id",
               "description" : "the order ID you would like to cover"
            }
         ],
         "prerequisites" : ["wallet_unlocked"],
         "aliases" : ["cover"]
      },
      {
         "method_name" : "wallet_market_batch_update",
         "description" : "Cancel and/or create many market orders in a single transaction.",
         "return_type" : "transaction_record",
         "parameters"  : [
            {
               "name" : "cancel_order_ids",
               "type" : "order_ids",
               "description" : "Order IDs of all market orders to cancel in this transaction."
            },
            {
               "name" : "new_orders",
               "type" : "order_descriptions",
               "description" : "Descriptions of all new orders to create in this transaction."
            },
            {
               "name" : "sign",
               "type" : "bool",
               "description" : "True if transaction should be signed and broadcast (if possible), false otherwse."
            }
         ],
         "prerequisites" : ["wallet_unlocked"],
         "aliases" : []
      },
      {
         "method_name" : "wallet_market_add_collateral",
         "description" : "Add collateral to a short position",
         "return_type" : "transaction_record",
         "parameters"  : [
            {
               "name" : "from_account_name",
               "type" : "account_name",
               "description" : "the account that will provide funds for the ask"
            },
            {
               "name" : "cover_id",
               "type" : "order_id",
               "description" : "the ID of the order to recollateralize"
            },
            {
               "name" : "collateral_to_add",
               "type" : "share_type",
               "description" : "Amount of collateral to add"
            }
          ],
         "prerequisites" : ["wallet_unlocked"],
         "aliases" : []
      },
      {
         "method_name" : "wallet_market_order_list",
         "description" : "List an order list of a specific market",
         "return_type" : "market_order_map",
         "parameters"  : [
            {
               "name" : "base_symbol",
               "type" : "asset_symbol",
               "description" : "the base symbol of the market"
            },
            {
               "name" : "quote_symbol",
               "type" : "asset_symbol",
               "description" : "the quote symbol of the market"
            },
            {
               "name" : "limit",
               "type" : "uint32_t",
               "description" : "the maximum number of items to return",
               "default_value" : -1
            },
            {
               "name" : "account_name",
               "type" : "account_name",
               "description" : "the account for which to get the orders, or 'ALL' to get them all",
               "default_value" : "ALL"
            }
         ],
         "prerequisites" : ["wallet_open"],
         "aliases" : []
      },
      {
         "method_name" : "wallet_account_order_list",
         "description" : "List an order list of a specific account",
         "return_type" : "market_order_map",
         "parameters"  : [
            {
               "name" : "account_name",
               "type" : "account_name",
               "description" : "the account for which to get the orders, or 'ALL' to get them all",
               "default_value" : "ALL"
            },
            {
               "name" : "limit",
               "type" : "uint32_t",
               "description" : "the maximum number of items to return",
               "default_value" : -1
            }
         ],
         "prerequisites" : ["wallet_open"],
         "aliases" : []
      },
      {
         "method_name" : "wallet_market_cancel_order",
         "description" : "Cancel an order: deprecated - use wallet_market_cancel_orders",
         "return_type" : "transaction_record",
         "parameters"  : [
            {
               "name" : "order_id",
               "type" : "order_id",
               "description" : "the ID of the order to cancel"
            }
          ],
         "prerequisites" : ["wallet_unlocked"],
         "aliases" : []
      },
      {
         "method_name" : "wallet_market_cancel_orders",
         "description" : "Cancel more than one order at a time",
         "return_type" : "transaction_record",
         "parameters"  : [
            {
               "name" : "order_ids",
               "type" : "order_ids",
               "description" : "the IDs of the orders to cancel"
            }
          ],
         "prerequisites" : ["wallet_unlocked"],
         "aliases" : []
      },
      {
         "method_name" : "wallet_dump_private_key",
         "description" : "Reveals the private key corresponding to an account, public key, or address",
         "return_type"  : "string",
         "parameters" : [
             {
                "name" : "input",
                "type" : "string",
                "description" : "an account name, public key, or address (quoted hash of public key)"
             }
         ],
         "prerequisites" : ["wallet_unlocked"],
         "aliases" : [ "dump_private_key", "dumpprivkey" ]
      },
      {
         "method_name" : "wallet_account_vote_summary",
         "description" : "Returns the allocation of votes by this account",
         "return_type" : "account_vote_summary",
         "parameters"  : [
            {
                "name" :  "account_name",
                "type" : "account_name",
                "description" : "the account to report votes on, or empty for all accounts",
                "default_value" : ""
            }
          ],
         "is_const" : true,
         "prerequisites" : ["wallet_open"],
         "aliases" : ["votes"]
      },
      {
         "method_name" : "wallet_check_vote_proportion",
         "description" : "Check how much this account is utilizing its voting power",
         "return_type" : "vote_summary",
         "parameters"  : [
             {
                "name" : "account",
                "type" : "account_name",
                "description" : ""
             }
         ],
         "prerequisites" : ["wallet_unlocked"]
      },
      {
         "method_name" : "wallet_set_setting",
         "description" : "Set a property in the GUI settings DB",
         "return_type" : "void",
         "parameters"  : [
            {
                "name" : "name",
                "type" : "string",
                "description" : "the name of the setting to set"
            },
            {
                "name" : "value",
                "type" : "variant",
                "description" : "the value to set the setting to"
            }
          ],
         "prerequisites" : ["wallet_open"]
      },
      {
         "method_name" : "wallet_get_setting",
         "description" : "Get the value of the given setting",
         "return_type" : "optional_variant",
         "parameters"  : [
            {
                "name" : "name",
                "type" : "string",
                "description" : "The name of the setting to fetch"
            }
          ],
         "prerequisites" : ["wallet_open"]
      },
      {
         "method_name" : "wallet_delegate_set_block_production",
         "description" : "Enable or disable block production for a particular delegate account",
         "return_type" : "void",
         "parameters"  : [
            {
                "name" : "delegate_name",
                "type" : "string",
                "description" : "The delegate to enable/disable block production for; ALL for all delegate accounts"
            },
            {
                "name" : "enabled",
                "type" : "bool",
                "description" : "true to enable block production, false otherwise"
            }
          ],
         "prerequisites" : ["wallet_open"]
      },
      {
         "method_name" : "wallet_set_transaction_scanning",
         "description" : "Enable or disable wallet transaction scanning",
         "return_type" : "bool",
         "parameters"  : [
            {
                "name" : "enabled",
                "type" : "bool",
                "description" : "true to enable transaction scanning, false otherwise"
            }
          ],
         "prerequisites" : ["wallet_open"]
      },
      {
         "method_name" : "wallet_sign_hash",
         "description" : "Signs the provided message digest with the account key",
         "return_type" : "compact_signature",
         "parameters"  : [
            {
                "name" : "signing_account",
                "type" : "string",
                "description" : "Name of the account to sign the message with"
            },
            {
                "name" : "hash",
                "type" : "sha256",
                "description" : "SHA256 digest of the message to sign"
            }
         ],
         "prerequisites" : ["wallet_unlocked"]
      },
      {
         "method_name" : "wallet_login_start",
         "description" : "Initiates the login procedure by providing a BitShares Login URL",
         "return_type" : "string",
         "parameters"  : [
            {
                "name" : "server_account",
                "type" : "string",
                "description" : "Name of the account of the server. The user will be shown this name as the site he is logging into."
            }
         ],
         "prerequisites" : ["wallet_unlocked"]
      },
      {
         "method_name" : "wallet_login_finish",
         "description" : "Completes the login procedure by finding the user's public account key and shared secret",
         "return_type" : "variant",
         "parameters"  : [
            {
                "name" : "server_key",
                "type" : "public_key",
                "description" : "The one-time public key from wallet_login_start."
            },
            {
                "name" : "client_key",
                "type" : "public_key",
                "description" : "The client's one-time public key."
            },
            {
                "name" : "client_signature",
                "type" : "compact_signature",
                "description" : "The client's signature of the shared secret."
            }
         ],
         "prerequisites" : ["wallet_unlocked"]
      },
      {
         "method_name" : "wallet_publish_slate",
         "description" : "Publishes the current wallet delegate slate to the public data associated with the account",
         "return_type" : "transaction_record",
         "parameters"  : [
            {
                "name" : "publishing_account_name",
                "type" : "account_name",
                "description" : "The account to publish the slate ID under"
            },
            {
                "name" : "paying_account_name",
                "type" : "account_name",
                "description" : "The account to pay transaction fees or leave empty to pay with publishing account",
                "default_value" : ""
            }
         ],
         "prerequisites" : ["wallet_unlocked"]
      },
      {
         "method_name" : "wallet_publish_version",
         "description" : "Publish your current client version to the specified account's public data record",
         "return_type" : "transaction_record",
         "parameters"  : [
            {
                "name" : "publishing_account_name",
                "type" : "account_name",
                "description" : "The account to publish the client version under"
            },
            {
                "name" : "paying_account_name",
                "type" : "account_name",
                "description" : "The account to pay transaction fees with or leave empty to pay with publishing account",
                "default_value" : ""
            }
         ],
         "prerequisites" : ["wallet_unlocked"]
      },
      {
         "method_name" : "wallet_recover_accounts",
         "description" : "Attempts to recover accounts created after last backup was taken and returns number of successful recoveries. Use if you have restored from backup and are missing accounts.",
         "return_type" : "int32_t",
         "parameters"  : [
            {
                "name" : "accounts_to_recover",
                "type" : "int32_t",
                "description" : "The number of accounts to attept to recover"
            },
            {
                "name" : "maximum_number_of_attempts",
                "type" : "int32_t",
                "description" : "The maximum number of keys to generate trying to recover accounts",
                "default_value" : 1000
            }
         ],
         "prerequisites" : ["wallet_unlocked"]
      },
      {
         "method_name" : "wallet_recover_transaction",
         "description" : "Attempts to recover any missing recipient and memo information for the specified transaction",
         "return_type" : "transaction_record",
         "parameters"  : [
            {
                "name" : "transaction_id_prefix",
                "type" : "string",
                "description" : "the id (or id prefix) of the transaction record"
            },
            {
                "name" : "recipient_account",
                "type" : "string",
                "description" : "the account name of the recipient (if known)",
                "default_value" : ""
            }
         ],
         "prerequisites" : ["wallet_unlocked"],
         "aliases" : ["recover_transaction"]
      },
      {
         "method_name" : "wallet_verify_titan_deposit",
         "description" : "Verify whether the specified transaction made a TITAN deposit to the current wallet; returns null if not",
         "return_type" : "optional_variant_object",
         "parameters"  : [
            {
                "name" : "transaction_id_prefix",
                "type" : "string",
                "description" : "the id (or id prefix) of the transaction record"
            }
         ],
         "prerequisites" : ["wallet_unlocked"]
      },
      {
         "method_name" : "wallet_publish_price_feed",
         "description" : "publishes a price feed for BitAssets, only active delegates may do this",
         "return_type" : "transaction_record",
         "parameters"  : [
             {
                "name" : "delegate_account",
                "type" : "account_name",
                "description" : "the delegate to publish the price under"
             },
             {
                "name" : "price",
                "type" : "real_amount",
                "description" : "the number of this asset per XTS"
             },
             {
                "name" : "asset_symbol",
                "type" : "asset_symbol",
                "description" : "the type of asset being priced"
             }
         ],
         "prerequisites" : ["wallet_unlocked"]
      },
      {
         "method_name" : "wallet_publish_feeds",
         "description" : "publishes a set of feeds for BitAssets, only active delegates may do this",
         "return_type" : "transaction_record",
         "parameters"  : [
             {
                "name" : "delegate_account",
                "type" : "account_name",
                "description" : "the delegate to publish the price under"
             },
             {
                "name" : "symbol_to_price_map",
                "type" : "price_map",
                "description" : "maps the BitAsset symbol to the price per BTSX"
             }
         ],
         "prerequisites" : ["wallet_unlocked"]
      },
      {
         "method_name" : "wallet_regenerate_keys",
         "description" : "regenerates private keys as part of wallet recovery",
         "return_type" : "int32_t",
         "parameters"  : [
             {
                "name" : "account_name",
                "type" : "account_name",
                "description" : "the account the generated keys should be a part of"
             },
             {
                "name" : "max_key_number",
                "type" : "uint32_t",
                "description" : "the last key number to regenerate"
             }
         ],
         "prerequisites" : ["wallet_unlocked"]
      },
      {
         "method_name" : "wallet_mail_create",
         "description" : "Creates a new mail message and returns the unencrypted message.",
         "return_type" : "message",
         "parameters"  : [
             {
                "name" : "sender",
                "type" : "string",
                "description" : "The name of the message's sender."
             },
             {
                "name" : "subject",
                "type" : "string",
                "description" : "The subject of the message."
             },
             {
                "name" : "body",
                "type" : "string",
                "description" : "The body of the message."
             },
             {
                "name" : "reply_to",
                "type" : "message_id",
                "description" : "The ID of the message this is in reply to.",
                "default_value" : "message_id_type()"
             }
         ],
         "prerequisites" : ["wallet_unlocked"]
      },
      {
         "method_name" : "wallet_mail_encrypt",
         "description" : "Encrypts a mail message and returns the encrypted message.",
         "return_type" : "message",
         "parameters"  : [
             {
                "name" : "recipient",
                "type" : "string",
                "description" : "The name of the message's recipient."
             },
             {
                "name" : "plaintext",
                "type" : "message",
                "description" : "The plaintext message, such as from wallet_mail_create."
             }
         ],
         "prerequisites" : ["wallet_unlocked"]
      },
      {
         "method_name" : "wallet_mail_open",
         "description" : "Opens an encrypted mail message.",
         "return_type" : "message",
         "parameters"  : [
             {
                "name" : "recipient",
                "type" : "address",
                "description" : "The address of the message's recipient."
             },
             {
                "name" : "ciphertext",
                "type" : "message",
                "description" : "The encrypted message."
             }
         ],
         "prerequisites" : ["wallet_unlocked"]
      },
      {
         "method_name" : "wallet_set_preferred_mail_servers",
         "description" : "Sets the list of mail servers an account checks for his mail.",
         "return_type" : "void",
         "parameters"  : [
             {
                "name" : "account_name",
                "type" : "string",
                "description" : "The name of the account whose mail servers should be updated."
             },
             {
                "name" : "server_list",
                "type" : "string_array",
                "description" : "A list of names of blockchain accounts who run mail servers."
             },
             {
                "name" : "paying_account",
                "type" : "string",
                "description" : "The name of the account to pay the transaction fee, if different from account_name.",
                "default_value" : ""
             }
         ],
         "prerequisites" : ["wallet_unlocked"]
      }
    ]
}
