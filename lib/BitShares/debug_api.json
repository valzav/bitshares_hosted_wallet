{
  "category": "Debugging Methods",
  "methods" :
    [
      {
        "method_name": "debug_start_simulated_time",
        "description": "Begin using simulated time for testing",
        "return_type": "void",
        "parameters" : [
            {
              "name" : "new_simulated_time",
              "type" : "timestamp",
              "description" : "The simulated time to start with"
            }
        ],
        "is_const" : false,
        "prerequisites" : ["json_authenticated"],
        "aliases" : ["start_simulated_time"]
      },
      {
        "method_name": "debug_advance_time",
        "description": "Advance simulated time",
        "return_type": "void",
        "parameters" : [
            {
              "name" : "delta_time_seconds",
              "type" : "int32_t",
              "description" : "How far in the future to advance the time"
            },
            {
              "name" : "unit",
              "type" : "string",
              "description" : "The unit of time (\"seconds\", \"blocks\", or \"rounds\")",
              "default_value" : "seconds"
            }
        ],
        "is_const" : false,
        "prerequisites" : ["json_authenticated"],
        "aliases" : ["advance_time"]
      },
      {
        "method_name": "debug_wait",
        "description": "wait for specified amount of time",
        "return_type": "void",
        "parameters" :
          [
            {
              "name" : "wait_time",
              "type" : "uint32_t",
              "description" : "time in seconds to wait before accepting more input"
            }
          ],
        "is_const"   : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["wait"]
      },
      {
        "method_name": "debug_wait_for_block_by_number",
        "description": "Don't return until the specified block has arrived",
        "return_type": "void",
        "parameters" : [
            {
              "name" : "block_number",
              "type" : "uint32_t",
              "description" : "The block number (or offset) to wait for"
            },
            {
              "name" : "type",
              "type" : "string",
              "description" : "Whether to wait for an \"absolute\" block number, or a count of blocks \"relative\" to the current block number",
              "default_value" : "absolute"
            }
        ],
        "is_const" : false,
        "prerequisites" : ["json_authenticated"],
        "aliases" : ["wait_for_block_by_number"]
      },
      {
        "method_name": "debug_wait_block_interval",
        "description": "wait for n block intervals",
        "return_type": "void",
        "parameters" :
          [
            {
              "name" : "wait_time_in_block_intervals",
              "type" : "uint32_t",
              "description" : "time in block intervals to wait before accepting more input"
            }
          ],
        "is_const"   : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["wait_block_interval"]
      },
      {
        "method_name": "debug_enable_output",
        "description": "enables or disables output from the CLI",
        "return_type": "void",
        "parameters" :
          [
            {
              "name" : "enable_flag",
              "type" : "bool",
              "description" : "true to enable output, false to disable it"
            }
          ],
        "is_const"   : false,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["enable_output"]
      },
      {
        "method_name": "debug_filter_output_for_tests",
        "description": "prevents printing any times or other unpredictable data",
        "return_type": "void",
        "parameters" :
          [
            {
              "name" : "enable_flag",
              "type" : "bool",
              "description" : "true to enable filtering, false to disable it"
            }
          ],
        "is_const"   : false,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["filter_output_for_tests"]
      },
      {
          "method_name" : "debug_list_errors",
          "description" : "returns a list of notable errors",
          "return_type" : "error_map",
          "parameters"  : [
               {
                  "name" : "first_error_number",
                  "description" : "the first error to list",
                  "type" : "int32_t",
                  "default_value" : "0"
               },
               {
                  "name" : "limit",
                  "description" : "the maximum number of errors to return",
                  "type" : "uint32_t",
                  "default_value" : "20"
               },
               {
                  "name" : "filename",
                  "type" : "string",
                  "description" : "the filename to save json error list to",
                  "default_value" : ""
               }
        ],
        "is_const"   : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["errors", "list_errors"]
      },
      {
          "method_name" : "debug_list_errors_brief",
          "description" : "returns a list of short summaries of notable errors",
          "return_type" : "brief_error_map",
          "parameters"  : [
               {
                  "name" : "first_error_number",
                  "description" : "the first error to list",
                  "type" : "int32_t",
                  "default_value" : "0"
               },
               {
                  "name" : "limit",
                  "description" : "the maximum number of errors to return",
                  "type" : "uint32_t",
                  "default_value" : "20"
               },
               {
                  "name" : "filename",
                  "type" : "string",
                  "description" : "the filename to save json error list to",
                  "default_value" : ""
               } ],
        "is_const"   : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["list_errors_brief", "errors_brief"]
      },
      {
          "method_name" : "debug_write_errors_to_file",
          "description" : "writes a list of notable errors to a file",
          "return_type" : "void",
          "parameters"  : [
               {
                  "name" : "path",
                  "description" : "Where to dump the log file",
                  "type" : "string",
                  "default_value" : ""
               },
               {
                  "name" : "start_time",
                  "description" : "time of the first error",
                  "type" : "timestamp",
                  "default_value" : "19700101T000000"
               }
        ],
        "is_const"   : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["write_errors_to_file", "write_errors"]
      },
      {
        "method_name" : "debug_clear_errors",
        "description" : "clears the specified errors from the log",
        "return_type" : "void",
        "parameters"  : [
              {
                 "name" : "start_time",
                 "description" : "time of the first error",
                 "type" : "timestamp",
                 "default_value" : "19700101T000000"
              },
              {
                 "name" : "first_error_number",
                 "description" : "the first error to erase",
                 "type" : "int32_t",
                 "default_value" : "1"
              },
              {
                 "name" : "limit",
                 "description" : "the maximum number of errors to erase",
                 "type" : "uint32_t",
                 "default_value" : "1000000"
              } ],
          "prerequisites" : ["no_prerequisites"],
          "aliases" : ["clear_errors"]
      },
      {
        "method_name" : "debug_update_logging_config",
        "description" : "updates logging configuration (level, etc) based on settings in config.json",
        "return_type" : "void",
        "parameters"  : [],
        "aliases"     : [],
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "debug_get_call_statistics",
        "description": "Returns call timings for node_delegate callbacks",
        "return_type": "json_object",
        "parameters" : [],
        "is_const"   : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "debug_verify_delegate_votes",
        "description": "Adds up delegate votes using balances, and reports any discrepancies with the stored values in the database",
        "return_type": "json_object",
        "parameters" : [],
        "is_const"   : true,
        "prerequisites" : ["no_prerequisites"]
      }
    ]
}
